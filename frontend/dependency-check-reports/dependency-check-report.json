{"reportSchema": "1.1","scanInfo": {"engineVersion": "12.1.8","dataSource": [{"name": "NVD API Last Checked","timestamp": "2025-10-21T17:47:04-06"},{"name": "NVD API Last Modified","timestamp": "2025-10-21T23:17:11Z"}]},"projectInfo": {"name": "frontend","reportDate": "2025-10-21T23:48:44.572856700Z","credits": {"NVD": "This product uses the NVD API but is not endorsed or certified by the NVD. This report contains data retrieved from the National Vulnerability Database: https://nvd.nist.gov","CISA": "This report may contain data retrieved from the CISA Known Exploited Vulnerability Catalog: https://www.cisa.gov/known-exploited-vulnerabilities-catalog","NPM": "This report may contain data retrieved from the Github Advisory Database (via NPM Audit API): https://github.com/advisories/","RETIREJS": "This report may contain data retrieved from the RetireJS community: https://retirejs.github.io/retire.js/","OSSINDEX": "This report may contain data retrieved from the Sonatype OSS Index: https://ossindex.sonatype.org"}},"dependencies": [{"isVirtual": true,"fileName": "@eslint\/plugin-kit:0.3.1","filePath": "C:\\Users\\ealva\\Documents\\GitHub\\uvg-cifrados-proyecto2-fork\\frontend\\package-lock.json?@eslint\\plugin-kit","projectReferences": ["package-lock.json: transitive"],"evidenceCollected": {"vendorEvidence": [{"type": "vendor","confidence": "HIGH","source": "package.json","name": "name","value": "@eslint\/plugin-kit"}],"productEvidence": [{"type": "product","confidence": "HIGHEST","source": "package.json","name": "name","value": "@eslint\/plugin-kit"}],"versionEvidence": [{"type": "version","confidence": "HIGHEST","source": "package.json","name": "version","value": "0.3.1"}]},"packages": [{"id": "pkg:npm\/%40eslint%2Fplugin-kit@0.3.1","confidence": "HIGHEST"}],"vulnerabilities": [ {"source": "NPM","name": "GHSA-xffm-g5w8-qvg7","unscored": "true", "severity" : "low","cwes": ["CWE-1333"],"description": "### Summary\n\nThe `ConfigCommentParser#parseJSONLikeConfig` API is vulnerable to a Regular Expression Denial of Service (ReDoS) attack in its only argument.\n\n### Details\n\nThe regular expression at [packages\/plugin-kit\/src\/config-comment-parser.js:158](https:\/\/github.com\/eslint\/rewrite\/blob\/bd4bf23c59f0e4886df671cdebd5abaeb1e0d916\/packages\/plugin-kit\/src\/config-comment-parser.js#L158) is vulnerable to a quadratic runtime attack because the grouped expression is not anchored. This can be solved by prepending the regular expression with `[^-a-zA-Z0-9\/]`.\n\n### PoC\n\n```javascript\nconst { ConfigCommentParser } = require(\"@eslint\/plugin-kit\");\n\nconst str = `${\"A\".repeat(1000000)}?: 1 B: 2`;\n\nconsole.log(\"start\")\nvar parser = new ConfigCommentParser();\nconsole.log(parser.parseJSONLikeConfig(str));\nconsole.log(\"end\")\n\n\/\/ run `npm i @eslint\/plugin-kit@0.3.3` and `node attack.js`\n\/\/ then the program will stuck forever with high CPU usage\n```\n\n### Impact\n\nThis is a Regular Expression Denial of Service attack which may lead to blocking execution and high CPU usage.","notes": "","references": [ {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/eslint\/rewrite\/security\/advisories\/GHSA-xffm-g5w8-qvg7","name": "https:\/\/github.com\/eslint\/rewrite\/security\/advisories\/GHSA-xffm-g5w8-qvg7"}, {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/eslint\/rewrite\/commit\/b283f64099ad6c6b5043387c091691d21b387805","name": "https:\/\/github.com\/eslint\/rewrite\/commit\/b283f64099ad6c6b5043387c091691d21b387805"}, {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/advisories\/GHSA-xffm-g5w8-qvg7","name": "https:\/\/github.com\/advisories\/GHSA-xffm-g5w8-qvg7"}],"vulnerableSoftware": [ {"software": { "id":"cpe:2.3:a:*:\\@eslint\\\/plugin-kit:\\<0.3.4:*:*:*:*:*:*:*"}}]}]},{"isVirtual": true,"fileName": "brace-expansion:2.0.1","filePath": "C:\\Users\\ealva\\Documents\\GitHub\\uvg-cifrados-proyecto2-fork\\frontend\\package-lock.json?brace-expansion","projectReferences": ["package-lock.json: transitive"],"evidenceCollected": {"vendorEvidence": [{"type": "vendor","confidence": "HIGH","source": "package.json","name": "name","value": "brace-expansion"}],"productEvidence": [{"type": "product","confidence": "HIGHEST","source": "package.json","name": "name","value": "brace-expansion"}],"versionEvidence": [{"type": "version","confidence": "HIGHEST","source": "package.json","name": "version","value": "2.0.1"}]},"packages": [{"id": "pkg:npm\/brace-expansion@2.0.1","confidence": "HIGHEST"}],"vulnerabilities": [ {"source": "NPM","name": "GHSA-v6h2-p8h4-qcjw","unscored": "true", "severity" : "low","cvssv3": {"baseScore": 3.0999999046325684 ,"attackVector": "NETWORK","attackComplexity": "HIGH","privilegesRequired": "LOW","userInteraction": "NONE","scope": "UNCHANGED","confidentialityImpact": "NONE","integrityImpact": "NONE","availabilityImpact": "LOW","baseSeverity": "LOW","version": "3.1"},"cwes": ["CWE-400"],"description": "A vulnerability was found in juliangruber brace-expansion up to 1.1.11\/2.0.1\/3.0.0\/4.0.0. It has been rated as problematic. Affected by this issue is the function expand of the file index.js. The manipulation leads to inefficient regular expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. Upgrading to version 1.1.12, 2.0.2, 3.0.1 and 4.0.1 is able to address this issue. The name of the patch is `a5b98a4f30d7813266b221435e1eaaf25a1b0ac5`. It is recommended to upgrade the affected component.","notes": "","references": [ {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/advisories\/GHSA-v6h2-p8h4-qcjw","name": "https:\/\/github.com\/advisories\/GHSA-v6h2-p8h4-qcjw"}, {"source": "NPM Advisory reference: ","url": "https:\/\/gist.github.com\/mmmsssttt404\/37a40ce7d6e5ca604858fe30814d9466","name": "https:\/\/gist.github.com\/mmmsssttt404\/37a40ce7d6e5ca604858fe30814d9466"}, {"source": "NPM Advisory reference: ","url": "https:\/\/vuldb.com\/?submit.585717","name": "https:\/\/vuldb.com\/?submit.585717"}, {"source": "NPM Advisory reference: ","url": "https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2025-5889","name": "https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2025-5889"}, {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/juliangruber\/brace-expansion\/pull\/65\/commits\/a5b98a4f30d7813266b221435e1eaaf25a1b0ac5","name": "https:\/\/github.com\/juliangruber\/brace-expansion\/pull\/65\/commits\/a5b98a4f30d7813266b221435e1eaaf25a1b0ac5"}, {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/juliangruber\/brace-expansion\/commit\/15f9b3c75ebf5988198241fecaebdc45eff28a9f","name": "https:\/\/github.com\/juliangruber\/brace-expansion\/commit\/15f9b3c75ebf5988198241fecaebdc45eff28a9f"}, {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/juliangruber\/brace-expansion\/commit\/36603d5f3599a37af9e85eda30acd7d28599c36e","name": "https:\/\/github.com\/juliangruber\/brace-expansion\/commit\/36603d5f3599a37af9e85eda30acd7d28599c36e"}, {"source": "NPM Advisory reference: ","url": "https:\/\/vuldb.com\/?id.311660","name": "https:\/\/vuldb.com\/?id.311660"}, {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/juliangruber\/brace-expansion\/commit\/0b6a9781e18e9d2769bb2931f4856d1360243ed2","name": "https:\/\/github.com\/juliangruber\/brace-expansion\/commit\/0b6a9781e18e9d2769bb2931f4856d1360243ed2"}, {"source": "NPM Advisory reference: ","url": "https:\/\/vuldb.com\/?ctiid.311660","name": "https:\/\/vuldb.com\/?ctiid.311660"}, {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/juliangruber\/brace-expansion\/commit\/c3c73c8b088defc70851843be88ccc3af08e7217","name": "https:\/\/github.com\/juliangruber\/brace-expansion\/commit\/c3c73c8b088defc70851843be88ccc3af08e7217"}],"vulnerableSoftware": [ {"software": { "id":"cpe:2.3:a:*:brace-expansion:\\>\\=2.0.0\\<\\=2.0.1:*:*:*:*:*:*:*"}}]}]},{"isVirtual": true,"fileName": "vite:6.3.5","filePath": "C:\\Users\\ealva\\Documents\\GitHub\\uvg-cifrados-proyecto2-fork\\frontend\\package-lock.json?vite","projectReferences": ["package-lock.json: transitive"],"evidenceCollected": {"vendorEvidence": [{"type": "vendor","confidence": "HIGH","source": "package.json","name": "name","value": "vite"}],"productEvidence": [{"type": "product","confidence": "HIGHEST","source": "package.json","name": "name","value": "vite"}],"versionEvidence": [{"type": "version","confidence": "HIGHEST","source": "package.json","name": "version","value": "6.3.5"}]},"packages": [{"id": "pkg:npm\/vite@6.3.5","confidence": "HIGHEST"}],"vulnerabilities": [ {"source": "NPM","name": "GHSA-93m4-6634-74q7","unscored": "true", "severity" : "moderate","cwes": ["CWE-22"],"description": "### Summary\nFiles denied by [`server.fs.deny`](https:\/\/vitejs.dev\/config\/server-options.html#server-fs-deny) were sent if the URL ended with `\\` when the dev server is running on Windows.\n\n### Impact\nOnly apps that match the following conditions are affected:\n\n- explicitly exposes the Vite dev server to the network (using --host or [`server.host` config option](https:\/\/vitejs.dev\/config\/server-options.html#server-host))\n- running the dev server on Windows\n\n### Details\n`server.fs.deny` can contain patterns matching against files (by default it includes `.env`, `.env.*`, `*.{crt,pem}` as such patterns). These patterns were able to bypass by using a back slash(`\\`). The root cause is that `fs.readFile('\/foo.png\/')` loads `\/foo.png`.\n\n### PoC\n```shell\nnpm create vite@latest\ncd vite-project\/\ncat \"secret\" > .env\nnpm install\nnpm run dev\ncurl --request-target \/.env\\ http:\/\/localhost:5173\n```\n<img width=\"1593\" height=\"616\" alt=\"image\" src=\"https:\/\/github.com\/user-attachments\/assets\/36212f4e-1d3c-4686-b16f-16b35ca9e175\" \/>","notes": "","references": [ {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/vitejs\/vite\/commit\/f479cc57c425ed41ceb434fecebd63931b1ed4ed","name": "https:\/\/github.com\/vitejs\/vite\/commit\/f479cc57c425ed41ceb434fecebd63931b1ed4ed"}, {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/advisories\/GHSA-93m4-6634-74q7","name": "https:\/\/github.com\/advisories\/GHSA-93m4-6634-74q7"}, {"source": "NPM Advisory reference: ","url": "https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2025-62522","name": "https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2025-62522"}, {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/vitejs\/vite\/security\/advisories\/GHSA-93m4-6634-74q7","name": "https:\/\/github.com\/vitejs\/vite\/security\/advisories\/GHSA-93m4-6634-74q7"}],"vulnerableSoftware": [ {"software": { "id":"cpe:2.3:a:*:vite:\\>\\=6.0.0\\<\\=6.4.0:*:*:*:*:*:*:*"}}]}, {"source": "NPM","name": "GHSA-g4jq-h2w9-997c","unscored": "true", "severity" : "low","cwes": ["CWE-22","CWE-284","CWE-200"],"description": "### Summary\nFiles starting with the same name with the public directory were served bypassing the `server.fs` settings.\n\n### Impact\nOnly apps that match the following conditions are affected:\n\n- explicitly exposes the Vite dev server to the network (using --host or [`server.host` config option](https:\/\/vitejs.dev\/config\/server-options.html#server-host))\n- uses [the public directory feature](https:\/\/vite.dev\/guide\/assets.html#the-public-directory) (enabled by default)\n- a symlink exists in the public directory\n\n### Details\nThe [servePublicMiddleware](https:\/\/github.com\/vitejs\/vite\/blob\/9719497adec4ad5ead21cafa19a324bb1d480194\/packages\/vite\/src\/node\/server\/middlewares\/static.ts#L79) function is in charge of serving public files from the server. It returns the [viteServePublicMiddleware](https:\/\/github.com\/vitejs\/vite\/blob\/9719497adec4ad5ead21cafa19a324bb1d480194\/packages\/vite\/src\/node\/server\/middlewares\/static.ts#L106) function which runs the needed tests and serves the page. The viteServePublicMiddleware function [checks if the publicFiles variable is defined](https:\/\/github.com\/vitejs\/vite\/blob\/9719497adec4ad5ead21cafa19a324bb1d480194\/packages\/vite\/src\/node\/server\/middlewares\/static.ts#L111), and then uses it to determine if the requested page is public. In the case that the publicFiles is undefined, the code will treat the requested page as a public page, and go on with the serving function. [publicFiles may be undefined if there is a symbolic link anywhere inside the public directory](https:\/\/github.com\/vitejs\/vite\/blob\/9719497adec4ad5ead21cafa19a324bb1d480194\/packages\/vite\/src\/node\/publicDir.ts#L21). In that case, every requested page will be passed to the public serving function. The serving function is based on the [sirv](https:\/\/github.com\/lukeed\/sirv) library. Vite patches the library to add the possibility to test loading access to pages, but when the public page middleware [disables this functionality](https:\/\/github.com\/vitejs\/vite\/blob\/9719497adec4ad5ead21cafa19a324bb1d480194\/packages\/vite\/src\/node\/server\/middlewares\/static.ts#L89) since public pages are meant to be available always, regardless of whether they are in the allow or deny list.\n\nIn the case of public pages, the serving function is [provided with the path to the public directory](https:\/\/github.com\/vitejs\/vite\/blob\/9719497adec4ad5ead21cafa19a324bb1d480194\/packages\/vite\/src\/node\/server\/middlewares\/static.ts#L85) as a root directory. The code of the sirv library [uses the join function to get the full path to the requested file](https:\/\/github.com\/lukeed\/sirv\/blob\/d061616827dd32d53b61ec9530c9445c8f592620\/packages\/sirv\/index.mjs#L42). For example, if the public directory is \"\/www\/public\", and the requested file is \"myfile\", the code will join them to the string \"\/www\/public\/myfile\". The code will then pass this string to the normalize function. Afterwards, the code will [use the string's startsWith function](https:\/\/github.com\/lukeed\/sirv\/blob\/d061616827dd32d53b61ec9530c9445c8f592620\/packages\/sirv\/index.mjs#L43) to determine whether the created path is within the given directory or not. Only if it is, it will be served.\n\nSince [sirv trims the trailing slash of the public directory](https:\/\/github.com\/lukeed\/sirv\/blob\/d061616827dd32d53b61ec9530c9445c8f592620\/packages\/sirv\/index.mjs#L119), the string's startsWith function may return true even if the created path is not within the public directory. For example, if the server's root is at \"\/www\", and the public directory is at \"\/www\/p\", if the created path will be \"\/www\/private.txt\", the startsWith function will still return true, because the string \"\/www\/private.txt\" starts with\u00A0 \"\/www\/p\". To achieve this, the attacker will use \"..\" to ask for the file \"..\/private.txt\". The code will then join it to the \"\/www\/p\" string, and will receive \"\/www\/p\/..\/private.txt\". Then, the normalize function will return \"\/www\/private.txt\", which will then be passed to the startsWith function, which will return true, and the processing of the page will continue without checking the deny list (since this is the public directory middleware which doesn't check that).\n\n### PoC\nExecute the following shell commands:\n\n```\nnpm  create  vite@latest\ncd vite-project\/\nmkdir p\ncd p\nln -s a b\ncd ..\necho  'import path from \"node:path\"; import { defineConfig } from \"vite\"; export default defineConfig({publicDir: path.resolve(__dirname, \"p\/\"), server: {fs: {deny: [path.resolve(__dirname, \"private.txt\")]}}})' > vite.config.js\necho  \"secret\" > private.txt\nnpm install\nnpm run dev\n```\n\nThen, in a different shell, run the following command:\n\n`curl -v --path-as-is 'http:\/\/localhost:5173\/private.txt'`\n\nYou will receive a 403 HTTP Response,\u00A0 because private.txt is denied.\n\nNow in the same shell run the following command:\n\n`curl -v --path-as-is 'http:\/\/localhost:5173\/..\/private.txt'`\n\nYou will receive the contents of private.txt.\n\n### Related links\n- https:\/\/github.com\/lukeed\/sirv\/commit\/f0113f3f8266328d804ee808f763a3c11f8997eb","notes": "","references": [ {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/vitejs\/vite\/commit\/e11d24008b97d4ca731ecc1a3b95260a6d12e7e0","name": "https:\/\/github.com\/vitejs\/vite\/commit\/e11d24008b97d4ca731ecc1a3b95260a6d12e7e0"}, {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/vitejs\/vite\/security\/advisories\/GHSA-g4jq-h2w9-997c","name": "https:\/\/github.com\/vitejs\/vite\/security\/advisories\/GHSA-g4jq-h2w9-997c"}, {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/vitejs\/vite\/commit\/4f1c35bcbb5830290c694aa14b6789e07450f069","name": "https:\/\/github.com\/vitejs\/vite\/commit\/4f1c35bcbb5830290c694aa14b6789e07450f069"}, {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/vitejs\/vite\/commit\/63e2a5d232218f3f8d852056751e609a5367aaec","name": "https:\/\/github.com\/vitejs\/vite\/commit\/63e2a5d232218f3f8d852056751e609a5367aaec"}, {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/lukeed\/sirv\/commit\/f0113f3f8266328d804ee808f763a3c11f8997eb","name": "https:\/\/github.com\/lukeed\/sirv\/commit\/f0113f3f8266328d804ee808f763a3c11f8997eb"}, {"source": "NPM Advisory reference: ","url": "https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2025-58751","name": "https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2025-58751"}, {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/vitejs\/vite\/commit\/09f2b52e8d5907f26602653caf41b3a56692600d","name": "https:\/\/github.com\/vitejs\/vite\/commit\/09f2b52e8d5907f26602653caf41b3a56692600d"}, {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/advisories\/GHSA-g4jq-h2w9-997c","name": "https:\/\/github.com\/advisories\/GHSA-g4jq-h2w9-997c"}],"vulnerableSoftware": [ {"software": { "id":"cpe:2.3:a:*:vite:\\>\\=6.0.0\\<\\=6.3.5:*:*:*:*:*:*:*"}}]}, {"source": "NPM","name": "GHSA-jqfw-vq24-v9c3","unscored": "true", "severity" : "low","cwes": ["CWE-23","CWE-284","CWE-200"],"description": "### Summary\nAny HTML files on the machine were served regardless of the `server.fs` settings.\n\n### Impact\n\nOnly apps that match the following conditions are affected:\n\n- explicitly exposes the Vite dev server to the network (using --host or [server.host config option](https:\/\/vitejs.dev\/config\/server-options.html#server-host))\n- `appType: 'spa'` (default) or `appType: 'mpa'` is used\n\nThis vulnerability also affects the preview server. The preview server allowed HTML files not under the output directory to be served.\n\n### Details\nThe [serveStaticMiddleware](https:\/\/github.com\/vitejs\/vite\/blob\/9719497adec4ad5ead21cafa19a324bb1d480194\/packages\/vite\/src\/node\/server\/middlewares\/static.ts#L123) function is in charge of serving static files from the server. It returns the [viteServeStaticMiddleware](https:\/\/github.com\/vitejs\/vite\/blob\/9719497adec4ad5ead21cafa19a324bb1d480194\/packages\/vite\/src\/node\/server\/middlewares\/static.ts#L136) function which runs the needed tests and serves the page. The viteServeStaticMiddleware function [checks if the extension of the requested file is \".html\"](https:\/\/github.com\/vitejs\/vite\/blob\/9719497adec4ad5ead21cafa19a324bb1d480194\/packages\/vite\/src\/node\/server\/middlewares\/static.ts#L144). If so, it doesn't serve the page. Instead, the server will go on to the next middlewares, in this case [htmlFallbackMiddleware](https:\/\/github.com\/vitejs\/vite\/blob\/9719497adec4ad5ead21cafa19a324bb1d480194\/packages\/vite\/src\/node\/server\/middlewares\/htmlFallback.ts#L14), and then to [indexHtmlMiddleware](https:\/\/github.com\/vitejs\/vite\/blob\/9719497adec4ad5ead21cafa19a324bb1d480194\/packages\/vite\/src\/node\/server\/middlewares\/indexHtml.ts#L438). These middlewares don't perform any test against allow or deny rules, and they don't make sure that the accessed file is in the root directory of the server. They just find the file and send back its contents to the client.\n\n### PoC\nExecute the following shell commands:\n\n```\nnpm  create  vite@latest\ncd vite-project\/\necho  \"secret\" > \/tmp\/secret.html\nnpm install\nnpm run dev\n```\n\nThen, in a different shell, run the following command:\n\n`curl  -v  --path-as-is  'http:\/\/localhost:5173\/..\/..\/..\/..\/..\/..\/..\/..\/..\/..\/..\/tmp\/secret.html'`\n\nThe contents of \/tmp\/secret.html will be returned.\n\nThis will also work for HTML files that are in the root directory of the project, but are in the deny list (or not in the allow list). Test that by stopping the running server (CTRL+C), and running the following commands in the server's shell:\n\n```\necho  'import path from \"node:path\"; import { defineConfig } from \"vite\"; export default defineConfig({server: {fs: {deny: [path.resolve(__dirname, \"secret_files\/*\")]}}})'  >  [vite.config.js](http:\/\/vite.config.js)\nmkdir secret_files\necho \"secret txt\" > secret_files\/secret.txt\necho \"secret html\" > secret_files\/secret.html\nnpm run dev\n\n```\n\nThen, in a different shell, run the following command:\n\n`curl  -v  --path-as-is  'http:\/\/localhost:5173\/secret_files\/secret.txt'`\n\nYou will receive a 403 HTTP Response,\u00A0 because everything in the secret_files directory is denied.\n\nNow in the same shell run the following command:\n\n`curl  -v  --path-as-is  'http:\/\/localhost:5173\/secret_files\/secret.html'`\n\nYou will receive the contents of secret_files\/secret.html.","notes": "","references": [ {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/vitejs\/vite\/commit\/482000f57f56fe6ff2e905305100cfe03043ddea","name": "https:\/\/github.com\/vitejs\/vite\/commit\/482000f57f56fe6ff2e905305100cfe03043ddea"}, {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/vitejs\/vite\/blob\/v7.1.5\/packages\/vite\/CHANGELOG.md","name": "https:\/\/github.com\/vitejs\/vite\/blob\/v7.1.5\/packages\/vite\/CHANGELOG.md"}, {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/advisories\/GHSA-jqfw-vq24-v9c3","name": "https:\/\/github.com\/advisories\/GHSA-jqfw-vq24-v9c3"}, {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/vitejs\/vite\/commit\/14015d794f69accba68798bd0e15135bc51c9c1e","name": "https:\/\/github.com\/vitejs\/vite\/commit\/14015d794f69accba68798bd0e15135bc51c9c1e"}, {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/vitejs\/vite\/commit\/6f01ff4fe072bcfcd4e2a84811772b818cd51fe6","name": "https:\/\/github.com\/vitejs\/vite\/commit\/6f01ff4fe072bcfcd4e2a84811772b818cd51fe6"}, {"source": "NPM Advisory reference: ","url": "https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2025-58752","name": "https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2025-58752"}, {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/vitejs\/vite\/security\/advisories\/GHSA-jqfw-vq24-v9c3","name": "https:\/\/github.com\/vitejs\/vite\/security\/advisories\/GHSA-jqfw-vq24-v9c3"}, {"source": "NPM Advisory reference: ","url": "https:\/\/github.com\/vitejs\/vite\/commit\/0ab19ea9fcb66f544328f442cf6e70f7c0528d5f","name": "https:\/\/github.com\/vitejs\/vite\/commit\/0ab19ea9fcb66f544328f442cf6e70f7c0528d5f"}],"vulnerableSoftware": [ {"software": { "id":"cpe:2.3:a:*:vite:\\>\\=6.0.0\\<\\=6.3.5:*:*:*:*:*:*:*"}}]}]}]}